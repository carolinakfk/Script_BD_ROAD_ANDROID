CREATE FUNCTION [dbo].[AndrDate]
(@ddate AS datetime)

returns bigint
AS

BEGIN

DECLARE @rv bigint
DECLARE @vy bigint
DECLARE @vm bigint
DECLARE @vd bigint
DECLARE @vh bigint
DECLARE @vmi bigint

SET @vy = CAST(YEAR(@ddate) AS bigint)
SET @vm = CAST(MONTH(@ddate) AS bigint)
SET @vd = CAST(DAY(@ddate) AS bigint)
SET @vh =  CAST(DATEPART(hour, @ddate) AS bigint)
SET @vmi = CAST(DATEPART(minute, @ddate) AS bigint)
SET @rv= @vy*10000+@vm*100+@vd
SET @rv= @rv*10000+@vh*100+@vmi

RETURN @rv

END
GO

CREATE FUNCTION [dbo].[AndrDateFin]
(@ddate AS datetime)

returns bigint

as

begin

DECLARE @rv bigint
DECLARE @vy bigint
DECLARE @vm bigint
DECLARE @vd bigint
DECLARE @vh bigint
DECLARE @vmi bigint

SET @vy = CAST(YEAR(@ddate) AS bigint)
SET @vm = CAST(MONTH(@ddate) AS bigint)
SET @vd = CAST(DAY(@ddate) AS bigint)
SET @vh =  CAST(DATEPART(hour, @ddate) AS bigint)
SET @vmi = CAST(DATEPART(minute, @ddate) AS bigint)
SET @rv= @vy*10000+@vm*100+@vd
SET @rv= @rv*1000000+235900

RETURN @rv

END
GO

/****** Object:  UserDefinedFunction [dbo].[AndrDateIni]    Script Date: 19/03/2019 09:31:19 a.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[AndrDateIni]
(@ddate AS datetime)

returns bigint

as

begin

DECLARE @rv bigint
DECLARE @vy bigint
DECLARE @vm bigint
DECLARE @vd bigint
DECLARE @vh bigint
DECLARE @vmi bigint
DECLARE @vse bigint

SET @vy = CAST(YEAR(@ddate) AS bigint)
SET @vm = CAST(MONTH(@ddate) AS bigint)
SET @vd = CAST(DAY(@ddate) AS bigint)
SET @vh =  CAST(DATEPART(hour, @ddate) AS bigint)
SET @vmi = CAST(DATEPART(minute, @ddate) AS bigint)
SET @rv= @vy*10000+@vm*100+@vd
SET @rv= @rv*1000000

RETURN @rv

END
GO

/****** Object:  Table [dbo].[P_PARAMEXT]    Script Date: 20/03/2019 08:19:29 a.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_PARAMEXT](
	[ID] [int] NOT NULL,
	[idRuta] [nvarchar](15) NOT NULL,
	[Nombre] [nvarchar](50) NULL CONSTRAINT [DF_P_PARAMEXT_Nombre]  DEFAULT (''),
	[Valor] [nvarchar](50) NULL CONSTRAINT [DF_P_PARAMEXT_Valor]  DEFAULT (''),
 CONSTRAINT [PK_P_PARAMEXT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC,
	[idRuta] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

DELETE FROM P_PARAMEXT;
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(1,'','GPS Margen ( Metros )','50')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(2,'','Stock Interfaz','S')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(3,'','Modalidad','TOL')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(4,'','Solicitud de inventario','')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(5,'','Pantalla aceptar carga','N')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(6,'','Boton Inventario ( Comunicacion )','S')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(7,'','Boton Precios ( Comunicacion )','S')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(8,'','Boton Recarga ( Comunicacion )','S')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(9,'','Cantidad de decimales en calculos','3')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(10,'','Cantidad de decimales impresion','3')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(11,'','Cantidad de decimales para cantidad','6')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(12,'','Simbolo de moneda','$')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(13,'','Seleccionar ayudante y veh√≠culo','S')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(14,'','Envio parcial','S')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(15,'','Ordenar producto por nombre','S')
INSERT INTO P_PARAMEXT (ID,idRuta,Nombre,Valor) VALUES(16,'','Formato factura','TOL')


/******     D_ATENCION      ******/

ALTER TABLE D_ATENCION ADD 	CoorX float NOT NULL default 0
GO
ALTER TABLE D_ATENCION ADD 	CoorY float NOT NULL default 0
GO
ALTER TABLE D_ATENCION ADD 	CliCoorX float NOT NULL default 0
GO
ALTER TABLE D_ATENCION ADD 	CliCoorY float NOT NULL default 0
GO
ALTER TABLE D_ATENCION ADD 	Dist float NOT NULL default 0
GO


/******  D_CLICOORD  ******/

CREATE TABLE [dbo].[D_CLICOORD](
	[CODIGO] [nvarchar](15) COLLATE Modern_Spanish_CI_AS NOT NULL,
	[STAMP] [float] NOT NULL,
	[COORX] [float] NULL,
	[COORY] [float] NULL,
	[STATCOM] [nvarchar](1) COLLATE Modern_Spanish_CI_AS NULL CONSTRAINT [DF_D_CLICOORD_STATCOM]  DEFAULT ('N'),
 CONSTRAINT [PK_D_CLICOORD] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC,
	[STAMP] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]

GO


SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[D_FACTURAF](
	[COREL] [nvarchar](25) NOT NULL,
	[NOMBRE] [nvarchar](50) NULL,
	[NIT] [nvarchar](30) NULL,
	[DIRECCION] [nvarchar](50) NULL,
 CONSTRAINT [PK_D_FACTURAF] PRIMARY KEY CLUSTERED 
(
	[COREL] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

ON [PRIMARY]
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[D_CLINUEVO_APR](
                [CODIGO] [nvarchar](15) COLLATE Modern_Spanish_CI_AS NOT NULL,
                [RUTA] [nvarchar](15) COLLATE Modern_Spanish_CI_AS NOT NULL,
                [FECHANAC] [datetime] NULL,
                [CUI] [nvarchar](25) COLLATE Modern_Spanish_CI_AS NULL,
                [DEPID] [nvarchar](50) COLLATE Modern_Spanish_CI_AS NULL,
                [MUNIID] [nvarchar](50) COLLATE Modern_Spanish_CI_AS NULL,
                [RELID] [nvarchar](2) COLLATE Modern_Spanish_CI_AS NULL,
                [GRUPOETNID] [nvarchar](2) COLLATE Modern_Spanish_CI_AS NULL,
                [ESCOLARID] [nvarchar](2) COLLATE Modern_Spanish_CI_AS NULL,
                [ESTADOID] [nvarchar](2) COLLATE Modern_Spanish_CI_AS NULL,
                [GENEROID] [nvarchar](2) COLLATE Modern_Spanish_CI_AS NULL,
                [HIJOS] [int] NULL,
                [STATCOM] [nvarchar](1) COLLATE Modern_Spanish_CI_AS NULL,
CONSTRAINT [PK_D_CLINUEVO_APR] PRIMARY KEY CLUSTERED 
(
                [CODIGO] ASC,
                [RUTA] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[P_STOCK_APR](
                [RUTA] [nvarchar](15) COLLATE Modern_Spanish_CI_AS NOT NULL,
                [CODIGO] [nvarchar](25) COLLATE Modern_Spanish_CI_AS NOT NULL,
                [CANT] [float] NULL,
                [PESO] [float] NULL,
CONSTRAINT [PK_P_STOCK_APR] PRIMARY KEY CLUSTERED 
(
                [RUTA] ASC,
                [CODIGO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO


/****** Object:  StoredProcedure [dbo].[AcumuladoObjetivos]    Script Date: 02/03/2019 01:56:53 a.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<JP>
-- Create date: <03-05-2018>
-- Description:	<Actualiza acumulado en tablas de objetivos>
-- =============================================
CREATE PROCEDURE [dbo].[AcumuladoObjetivos] 
	@ruta nvarchar(15), 
	@objano int,
	@objmes  int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

DECLARE @venta nvarchar(1)
DECLARE @totalm float
DECLARE @totalu float
DECLARE @metam float
DECLARE @metau float

DECLARE @codigo nvarchar(15)
DECLARE @counter int
      SET @counter = 1


SELECT @venta=VENTA FROM P_RUTA WHERE (CODIGO=@ruta) 


-- Objetivos por ruta

SELECT @metam=METAV,@metau=METAU FROM O_RUTA
	WHERE (RUTA=@ruta) AND (OBJANO=@objano) AND (OBJMES=@objmes)
SELECT @totalm=0
SELECT @totalu=0

IF @venta='P'
BEGIN

	SELECT @totalm=SUM(TOTAL) FROM D_PEDIDO
		WHERE  (ANULADO='N') AND (RUTA=@ruta) AND (YEAR(FECHA)=@objano) AND (MONTH(FECHA)=@objmes)

END
ELSE
	IF @metam>0
	BEGIN
		SELECT @totalm=SUM(TOTAL) FROM D_FACTURA
			WHERE  (ANULADO='N') AND (RUTA=@ruta) AND (YEAR(FECHA)=@objano) AND (MONTH(FECHA)=@objmes)
	END
	IF @metau>0
	BEGIN
		SELECT  @totalu=SUM(D_FACTURAD.CANT) 
			FROM D_FACTURA INNER JOIN D_FACTURAD ON D_FACTURA.COREL=D_FACTURAD.COREL
			WHERE (D_FACTURA.ANULADO='N') AND (D_FACTURA.RUTA=@ruta) AND (YEAR(D_FACTURA.FECHA)=@objano) AND 

(MONTH(D_FACTURA.FECHA)=@objmes)	
	END
END
 
IF @metam>0
BEGIN
	UPDATE O_RUTA SET ACUMV=@totalm WHERE (RUTA=@ruta) AND (OBJANO=@objano) AND (OBJMES=@objmes)
END
IF @metau>0
BEGIN
	UPDATE O_RUTA SET ACUMU=@totalu WHERE (RUTA=@ruta) AND (OBJANO=@objano) AND (OBJMES=@objmes)
END

-- Objetivos por linea

DECLARE lineas CURSOR READ_ONLY FOR
	SELECT Codigo, MetaV, MetaU
	FROM O_LINEA WHERE (RUTA=@ruta) AND (OBJANO=@objano) AND (OBJMES=@objmes)

OPEN lineas

FETCH NEXT FROM lineas INTO @codigo,@metam,@metau

WHILE @@FETCH_STATUS = 0
BEGIN
		
	-- PRINT @codigo+CHAR(9)+CAST(@metam AS VARCHAR(10))+CHAR(9)+CAST(@metau AS VARCHAR(10))

	SELECT @totalm=0
	SELECT @totalu=0

	IF @venta<>'P'
	BEGIN
		SELECT  @totalm=SUM(D_FACTURAD.TOTAL), @totalu=SUM(D_FACTURAD.CANT) 
		FROM  D_FACTURAD INNER JOIN D_FACTURA ON D_FACTURAD.COREL=D_FACTURA.COREL INNER JOIN
			P_PRODUCTO ON D_FACTURAD.PRODUCTO=P_PRODUCTO.CODIGO
		WHERE (D_FACTURA.ANULADO='N') AND (D_FACTURA.RUTA=@ruta) AND (YEAR(D_FACTURA.FECHA)=@objano) 
		AND (MONTH(dbo.D_FACTURA.FECHA)=@objmes) AND (P_PRODUCTO.LINEA=@codigo)
	END
 
	IF @metam>0
	BEGIN
		UPDATE O_LINEA SET ACUMV=ISNULL(@totalm,0) WHERE (RUTA=@ruta) AND (CODIGO=@codigo) AND (OBJANO=@objano) 

AND (OBJMES=@objmes)
	END
	IF @metau>0
	BEGIN
		UPDATE O_LINEA SET ACUMU=ISNULL(@totalu,0) WHERE (RUTA=@ruta) AND (CODIGO=@codigo) AND (OBJANO=@objano) 

AND (OBJMES=@objmes)
	END

	FETCH NEXT FROM lineas INTO @codigo,@metam,@metau

END

CLOSE lineas
DEALLOCATE lineas          


-- Objetivos por procucto

DECLARE productos CURSOR READ_ONLY FOR
	SELECT Codigo, MetaV, MetaU
	FROM O_PROD WHERE (RUTA=@ruta) AND (OBJANO=@objano) AND (OBJMES=@objmes)

OPEN productos       

FETCH NEXT FROM productos INTO @codigo,@metam,@metau

WHILE @@FETCH_STATUS = 0
BEGIN
		
	-- PRINT @codigo+CHAR(9)+CAST(@metam AS VARCHAR(10))+CHAR(9)+CAST(@metau AS VARCHAR(10))

	SELECT @totalm=0
	SELECT @totalu=0

	IF @venta<>'P'
	BEGIN
		SELECT  @totalm=SUM(D_FACTURAD.TOTAL), @totalu=SUM(D_FACTURAD.CANT) 
		FROM  D_FACTURAD INNER JOIN D_FACTURA ON D_FACTURAD.COREL=D_FACTURA.COREL 
		WHERE (D_FACTURA.ANULADO='N') AND (D_FACTURA.RUTA=@ruta) AND (YEAR(D_FACTURA.FECHA)=@objano) 
		AND (MONTH(dbo.D_FACTURA.FECHA)=@objmes) AND (D_FACTURAD.PRODUCTO=@codigo)
	END
 
	IF @metam>0
	BEGIN
		UPDATE O_PROD SET ACUMV=ISNULL(@totalm,0) WHERE (RUTA=@ruta) AND (CODIGO=@codigo) AND (OBJANO=@objano) AND 

(OBJMES=@objmes)
	END
	IF @metau>0
	BEGIN
		UPDATE O_PROD SET ACUMU=ISNULL(@totalu,0) WHERE (RUTA=@ruta) AND (CODIGO=@codigo) AND (OBJANO=@objano) AND 

(OBJMES=@objmes)
	END

	FETCH NEXT FROM productos INTO @codigo,@metam,@metau

END


CLOSE productos
DEALLOCATE productos 


GO

ALTER TABLE P_ARCHIVOCONF 
ALTER COLUMN PUERTO_IMPRESION NVARCHAR(50) NULL;

ALTER TABLE P_COREL
ADD FECHAVIG	datetime NULL,
    RESGUARDO	int NOT NULL DEFAULT(0),
	VALOR1	int NOT NULL DEFAULT(0);

ALTER TABLE P_CORELLOG
ADD FECHAVIG	datetime NULL;

ALTER TABLE D_PEDIDOD 
ADD UMVENTA	nvarchar(10) NULL,
	FACTOR	float NULL,
	UMSTOCK	nvarchar(25) NULL,
	UMPESO	nvarchar(25) NULL;

ALTER TABLE P_NIVELPRECIO 
ADD DECIMALES	int NOT NULL DEFAULT(0)

ALTER TABLE D_COBRO	
ADD SERIE	nvarchar(25) NULL,
CORELATIVO	int NULL ;

--Esto no aplica
--ALTER TABLE D_COBRO	
--ADD DESC1	nvarchar(50) NULL,
--DESC2	nvarchar(50) NULL,
--DESC3	nvarchar(50) NULL;

ALTER TABLE D_FACTURAP	
ALTER COLUMN DESC1 nvarchar(50) NULL;

ALTER TABLE D_FACTURAP	
ALTER COLUMN DESC2	nvarchar(50) NULL;

ALTER TABLE D_FACTURAP	
ALTER COLUMN DESC3	nvarchar(50) NULL;

ALTER TABLE D_FACTURAF
ALTER COLUMN DIRECCION nvarchar (200) null

--Modificaciones P_CLIENTE
UPDATE P_CLIENTE SET CHEQUEPOST = 'N' WHERE CHEQUEPOST IS NULL
UPDATE P_CLIENTE SET COD_PAIS = 'PA' WHERE COD_PAIS IS NULL
UPDATE P_CLIENTE SET CODBARRA = '' WHERE CODBARRA IS NULL

ALTER TABLE P_CLIENTE
ALTER COLUMN CHEQUEPOST nvarchar(50) NOT NULL;

ALTER TABLE P_CLIENTE	
ADD CONSTRAINT [DF_P_CLIENTE_CHEQUEPOST]  DEFAULT ('N') FOR CHEQUEPOST;

ALTER TABLE P_CLIENTE	
ALTER COLUMN COD_PAIS nvarchar(10) NOT NULL;

ALTER TABLE P_CLIENTE	
ADD CONSTRAINT [DF_P_CLIENTE_COD_PAIS]  DEFAULT ('PA') FOR COD_PAIS;

DROP INDEX [IX_P_CLIENTE_1] ON [dbo].[P_CLIENTE]
GO

ALTER TABLE P_CLIENTE	
ALTER COLUMN CODBARRA nvarchar(50) NOT NULL 

ALTER TABLE P_CLIENTE	
ADD  CONSTRAINT [DF_P_CLIENTE_CODBARRA]  DEFAULT ('') FOR CODBARRA;

/****** Object:  Index [IX_P_CLIENTE_1]    Script Date: 19/03/2019 10:37:09 a.m. ******/
CREATE NONCLUSTERED INDEX [IX_P_CLIENTE_1] ON [dbo].[P_CLIENTE]
(
	[CODBARRA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, 

ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[P_CODNOLEC]    Script Date: 05/03/2019 12:34:11 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_CODNOLEC](
	[CODIGO] [int] NOT NULL,
	[NOMBRE] [nvarchar](50) NULL,
 CONSTRAINT [PK_P_CODNOLEC] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Object:  Table [dbo].[P_IMPRESORA]    Script Date: 18/03/2019 06:01:17 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_IMPRESORA](
	[IDIMPRESORA] [nvarchar](20) NOT NULL,
	[NUMSERIE] [nvarchar](50) NULL,
	[MARCA] [nvarchar](20) NULL,
	[MODELO] [nvarchar](20) NULL,
	[CREADA] [nvarchar](20) NULL,
	[MODIFICADA] [nvarchar](50) NULL,
	[FECHA_CREADA] [datetime] NULL,
	[FECHA_MODIFICADA] [datetime] NULL,
 CONSTRAINT [PK_P_IMPRESORA] PRIMARY KEY CLUSTERED 
(
	[IDIMPRESORA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Object:  Table [dbo].[P_CLIENTE_FACHADA]    Script Date: 19/03/2019 10:41:44 a.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_CLIENTE_FACHADA](
	[CODIGO] [nvarchar](15) NOT NULL,
	[IMAGEN] [image] NULL,
 CONSTRAINT [PK_P_CLIENTE_FACHADA] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

/****** Object:  Table [dbo].[P_STOCKINV]    Script Date: 19/03/2019 10:44:47 a.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_STOCKINV](
	[CODIGO] [nvarchar](15) NOT NULL,
	[CANT] [float] NULL,
	[PESO] [float] NULL,
 CONSTRAINT [PK_P_STOCKINV_1] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[P_CORELNC]    Script Date: 19/03/2019 11:21:25 a.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_CORELNC](
	[RESOL] [nvarchar](25) NOT NULL,
	[SERIE] [nvarchar](15) NOT NULL,
	[CORELINI] [int] NOT NULL,
	[CORELFIN] [int] NULL,
	[CORELULT] [int] NULL,
	[FECHARES] [datetime] NULL,
	[RUTA] [nvarchar](15) NULL,
	[EMP] [nvarchar](3) NOT NULL,
	[ACTIVA] [nvarchar](1) NULL,
	[HANDHELD] [nvarchar](20) NULL,
	[FECHAVIG] [datetime] NULL,
	[RESGUARDO] [int] NULL,
	[VALOR1] [int] NULL,
 CONSTRAINT [PK_P_CORELNC] PRIMARY KEY CLUSTERED 
(
	[RESOL] ASC,
	[SERIE] ASC,
	[CORELINI] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[P_CORELNC] ADD  CONSTRAINT [DF_P_CORELNC_RESGUARDO]  DEFAULT ((0)) FOR [RESGUARDO]
GO

ALTER TABLE [dbo].[P_CORELNC] ADD  CONSTRAINT [DF_P_CORELNC_VALOR1]  DEFAULT ((1)) FOR [VALOR1]
GO

ALTER TABLE P_EMPRESA ADD[INCIDENCIA_NO_LECTURA] [bit] NOT NULL DEFAULT(1);

UPDATE P_COREL SET  FECHAVIG = '30001231' WHERE FECHAVIG IS NULL
UPDATE P_COREL SET RESGUARDO = 0  WHERE RESGUARDO IS NULL
UPDATE P_COREL SET VALOR1 = 0  WHERE VALOR1 IS NULL

CREATE TABLE [dbo].[P_REF1](
	[CODIGO] [nvarchar](50) NOT NULL,
	[NOMBRE] [nvarchar](200) NULL,
 CONSTRAINT [PK_P_REF1] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[P_REF2](
	[CODIGO] [nvarchar](50) NOT NULL,
	[NOMBRE] [nvarchar](200) NULL,
 CONSTRAINT [PK_P_REF2] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[P_REF3](
	[CODIGO] [nvarchar](50) NOT NULL,
	[NOMBRE] [nvarchar](200) NULL,
 CONSTRAINT [PK_P_REF3] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

/*#EJC20190320_0953PM*/

/*Contiene el listado de dispositivos v√°lidos con licenciamiento*/
CREATE TABLE [dbo].[licencia_item](
	[idDisp] [nvarchar](200) NOT NULL,
	[identificacion] [nvarchar](200) NULL,
	[tipo] [int] NULL,
	[bandera] [int] NULL,
	[estado] [nvarchar](200) NULL,
	[activo] [bit] NULL default 1,
	[fec_agr] [datetime] NULL default GETDATE(),
 CONSTRAINT [PK_licencia_item] PRIMARY KEY CLUSTERED 
(
	[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[licencia_item] ADD  CONSTRAINT [DF_licencia_item_bandera]  DEFAULT ((0)) FOR [bandera]
GO

/*Contiene la llave maestra que indica la cantidad de equipos con licenciamiento*/
CREATE TABLE [dbo].[licencia_llave](
	[idLlave] [int] NOT NULL,
	[Llave] [nvarchar](250) NOT NULL,
	[activo] [bit] NULL default 1,
	[fec_agr] [datetime] NULL default GETDATE(),
 CONSTRAINT [PK_licencia_llave] PRIMARY KEY CLUSTERED 
(
	[idLlave] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[licencia_llave] ADD  CONSTRAINT [DF_licencia_llave_Llave]  DEFAULT ('') FOR [Llave]
GO

/*Contiene el registro de cada vez que una m√°quina se loguea en el sistema*/
CREATE TABLE [dbo].[licencia_login](
	[idLicenciaLogin] [int] NOT NULL,
	[idDisp] [nvarchar](200) NOT NULL,
	[valor] [nvarchar](200) NULL,
	[fec_agr] [datetime] NULL default GETDATE(),
 CONSTRAINT [PK_licencia_login] PRIMARY KEY CLUSTERED 
(
	[idLicenciaLogin] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/*Contiene el registro de solicitudes de equipos que no tienen licencia pero se conectan al servidor de licencias.*/
CREATE TABLE [dbo].[licencia_solic](
	[idDisp] [nvarchar](200) NOT NULL,
	[identificacion] [nvarchar](200) NULL,
	[tipo] [int] NULL,
	[estado] [nvarchar](200) NULL,
	[fec_agr] [datetime] NULL default GETDATE(),
 CONSTRAINT [PK_licencia_solic] PRIMARY KEY CLUSTERED 
(
	[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

--#CKFK 20190321 0623 PM Modifiqu√© la tabla P_HANDHELD para poder llevar el control del Correlativo del cierre Z y del GrandTotal

ALTER TABLE P_HANDHELD 
ADD CORELZ INT NOT NULL DEFAULT(0),
GRANDTOTAL FLOAT NOT NULL DEFAULT(0)

INSERT INTO P_MENUSISTEMA VALUES('5.4',1,'Licencia','tsmiLicencia',2,'5')
INSERT INTO P_MENUSISTEMA VALUES('5.5',1,'Auditoria','tsmiAuditoria',2,'5')
INSERT INTO P_MENUSISTEMA VALUES('5.5.1',1,'Bit√°cora','tsmiBitacora',2,'5')
INSERT INTO P_MENUSISTEMA VALUES ('1.5.10',1,'Impresoras', 'tsmiImpresoras', 3, '1.5')

INSERT INTO P_MENUROL
SELECT COD_ROL, COD_SUCURSAL, '5.4',1, 1
FROM P_MENUROL WHERE IDMENU =  '5.3'

INSERT INTO P_MENUROL
SELECT COD_ROL, COD_SUCURSAL, '5.5',1, 1
FROM P_MENUROL WHERE IDMENU =  '5.3'

INSERT INTO P_MENUROL
SELECT COD_ROL, COD_SUCURSAL, '5.5.1',1, 1
FROM P_MENUROL WHERE IDMENU =  '5.3'

INSERT INTO P_MENUROL
SELECT COD_ROL, COD_SUCURSAL, '1.5.10',1, 1
FROM P_MENUROL WHERE IDMENU =  '1.5.9'

--#CKFK 20190325 Se agregaron los campos a la tabla D_NOTACRED
ALTER TABLE D_NOTACRED
ADD RESOLNC NVARCHAR(50) NOT NULL DEFAULT(''),
SERIEFACT NVARCHAR(50) NOT NULL DEFAULT(''),
CORELFACT INT NOT NULL DEFAULT(0),
IMPRES INT NOT NULL  DEFAULT(0)

CREATE TABLE [dbo].[D_REPFINDIA](
	[RUTA] [nvarchar](15) NOT NULL,
	[LINEA] [int] NOT NULL,
	[TEXTO] [nvarchar](100) NULL,
 CONSTRAINT [PK_D_REPFINDIA] PRIMARY KEY CLUSTERED 
(
	[RUTA] ASC,
	[LINEA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER TABLE P_RUTA
ADD IDIMPRESORA NVARCHAR(20) NOT NULL DEFAULT '',
NUMVERSION  NVARCHAR(20) NOT NULL DEFAULT '',
FECHAVERSION DATE NOT NULL DEFAULT GETDATE(),
ARQUITECTURA NVARCHAR(5) NOT NULL DEFAULT 'WM'

ALTER TABLE P_IMPRESORA
ADD MACADDRESS NVARCHAR(20) NOT NULL DEFAULT ''

ALTER TABLE P_IMPRESORA
ALTER COLUMN MACADDRESS NVARCHAR(200) NOT NULL

ALTER TABLE P_IMPRESORA
ALTER COLUMN NUMSERIE NVARCHAR(200) NOT NULL

--#JP 20190416 Se agrego tabla P_PRODIMAGEN para guardar imagen del producto para enviar a dispositivo

CREATE TABLE [dbo].[P_PRODIMAGEN](
	[CODIGO] [nvarchar](15) NOT NULL,
	[IMAGEN] [image] NULL,
 CONSTRAINT [PK_P_PRODIMAGEN] PRIMARY KEY CLUSTERED 
(
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

CREATE TABLE [dbo].[P_BITACORA_VERSIONHH](
	[IDBITACORA] [int] IDENTITY(1,1) NOT NULL,
	[RUTA] [nvarchar](15) NOT NULL,
	[FECHA] [datetime] NULL,
	[NUMVERSION] [nvarchar](50) NULL,
	[ARQUITECTURA] [nvarchar](50) NULL,
 CONSTRAINT [PK_P_BITACORA_VERSIONHH] PRIMARY KEY CLUSTERED 
(
	[IDBITACORA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Object:  Table [dbo].[P_ENCABEZADO_REPORTESHH_II]    Script Date: 03/05/2019 02:07:33 p.m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[P_ENCABEZADO_REPORTESHH_II](
    [CODIGO] [int] IDENTITY(1,1) NOT NULL,
    [TEXTO] [nvarchar](80) NOT NULL CONSTRAINT [DF_P_ENCABEZADO_REPORTESHH_II_TEXTO]  DEFAULT (''),
    [SUCURSAL] [nvarchar](10) NOT NULL CONSTRAINT [DF_P_ENCABEZADO_REPORTESHH_II_SUCURSAL]  DEFAULT ('')
) ON [PRIMARY]

GO
SET IDENTITY_INSERT [dbo].[P_ENCABEZADO_REPORTESHH_II] ON
INSERT INTO P_ENCABEZADO_REPORTESHH_II ([CODIGO], [TEXTO], [SUCURSAL]) SELECT [CODIGO], [TEXTO], [SUCURSAL] FROM P_ENCABEZADO_REPORTESHH
SET IDENTITY_INSERT [dbo].[P_ENCABEZADO_REPORTESHH_II] OFF

UPDATE P_ENCABEZADO_REPORTESHH_II
SET TEXTO= REPLACE(texto,'RR','@Ruta')
UPDATE P_ENCABEZADO_REPORTESHH_II
SET TEXTO= REPLACE(texto,'VV','@Vendedor')
UPDATE P_ENCABEZADO_REPORTESHH_II
SET TEXTO= REPLACE(texto,'CC','@Cliente')
UPDATE P_ENCABEZADO_REPORTESHH_II
SET TEXTO= REPLACE(texto,'SS','@Serie')
UPDATE P_ENCABEZADO_REPORTESHH_II
SET TEXTO= REPLACE(texto,'##','@Numero')

INSERT INTO P_PARAMEXT VALUES(17,'','Correcta la impresi√≥n de la factura','S')
INSERT INTO P_PARAMEXT VALUES(18,'','Restringir venta por GPS margen','S')
INSERT INTO P_PARAMEXT VALUES(19,'','Margen de error de GPS','10')
INSERT INTO P_PARAMEXT VALUES(20,'','Muestra fotos de productos','N')

ALTER TABLE D_PEDIDOD ADD [UMVENTA] [NVARCHAR](25) NULL,
	[FACTOR] [FLOAT] NULL,
	[UMSTOCK] [NVARCHAR](25) NULL,
	[UMPESO] [NVARCHAR](25) NULL

/****** Object:  Table [dbo].[D_RATING]    Script Date: 22/05/2019 04:15:47 p.m. ******/

SET ANSI_NULLS ON

GO

 
SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[D_RATING](
       [IDRATING] [int] IDENTITY(1,1) NOT NULL,
       [RUTA] [nvarchar](15) NOT NULL,
       [VENDEDOR] [nvarchar](15) NOT NULL,
       [RATING] [smallint] NOT NULL,
       [COMENTARIO] [nvarchar](200) NOT NULL,
       [IDTRANSERROR] [int] NOT NULL,
       [FECHA] [datetime] NOT NULL,
       [STATCOM] [nvarchar](1) NOT NULL,
 CONSTRAINT [PK_D_RATING] PRIMARY KEY CLUSTERED
(
       [IDRATING] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
 
GO

ALTER TABLE [dbo].[D_RATING] ADD  CONSTRAINT [DF_D_RATING_RATING]  DEFAULT ((0)) FOR [RATING]
GO
ALTER TABLE [dbo].[D_RATING] ADD  CONSTRAINT [DF_D_RATING_COMENTARIO]  DEFAULT ('') FOR [COMENTARIO]
GO
ALTER TABLE [dbo].[D_RATING] ADD  CONSTRAINT [DF_D_RATING_IDTRANSACCION]  DEFAULT ((0)) FOR [IDTRANSERROR]
GO
ALTER TABLE [dbo].[D_RATING] ADD  CONSTRAINT [DF_D_RATING_FECHA]  DEFAULT (getdate()) FOR [FECHA]
GO
ALTER TABLE [dbo].[D_RATING] ADD  CONSTRAINT [DF_D_RATING_STATCOM]  DEFAULT (N'N') FOR [STATCOM]
GO

/****** Object:  Table [dbo].[P_TRANSERROR]    Script Date: 22/05/2019 08:08:18 p.m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[P_TRANSERROR](
       [IDTRANSERROR] [int] NOT NULL,
       [TRANSERROR] [nvarchar](50) NOT NULL CONSTRAINT [DF_P_TRANS_ERROR_DESCRIPCION]  DEFAULT (''),
 CONSTRAINT [PK_P_TRANS_ERROR] PRIMARY KEY CLUSTERED
(
       [IDTRANSERROR] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
 
GO

INSERT [dbo].[P_TRANSERROR] ([IDTRANSERROR], [TRANSERROR]) VALUES (1, N'Facturaci√≥n')
INSERT [dbo].[P_TRANSERROR] ([IDTRANSERROR], [TRANSERROR]) VALUES (2, N'Toma de pedidos')
INSERT [dbo].[P_TRANSERROR] ([IDTRANSERROR], [TRANSERROR]) VALUES (3, N'Env√≠o de datos')
INSERT [dbo].[P_TRANSERROR] ([IDTRANSERROR], [TRANSERROR]) VALUES (4, N'Recepci√≥n de datos')
INSERT [dbo].[P_TRANSERROR] ([IDTRANSERROR], [TRANSERROR]) VALUES (5, N'Devoluci√≥n de productos')
INSERT [dbo].[P_TRANSERROR] ([IDTRANSERROR], [TRANSERROR]) VALUES (6, N'Fin de d√≠a')

ALTER TABLE P_SUCURSAL ADD COLGRID int NULL

/****** Object:  Table [dbo].[P_CONFIGBARRA]    Script Date: 07/07/2019 10:34:41 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_CONFIGBARRA](
	[IDCONFIGBARRA] [int] NOT NULL,
	[LONGITUDBARRA] [int] NOT NULL CONSTRAINT [DF_P_CONFIGBARRA_LONGITUDBARRA]  DEFAULT ((18)),
	[PREFIJO] [nvarchar](5) NOT NULL CONSTRAINT [DF_P_CONFIGBARRA_PREFIJO]  DEFAULT ((0)),
 CONSTRAINT [PK_P_CONFIGBARRA] PRIMARY KEY CLUSTERED 
(
	[IDCONFIGBARRA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

INSERT INTO P_PARAMEXT VALUES(21,'','Guarda la barra escaneada con transacci√≥n','N');

INSERT INTO [P_CONFIGBARRA] ([IDCONFIGBARRA]) VALUES(1);

--#CKFK 20190718 Tablas agregadas por funcionalidades de la Fortuna
/****** Object:  Table [dbo].[P_PEDSUG]    Script Date: 18/07/2019 12:49:12 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_PEDSUG](
	[IDPEDIDOSUG] [int] IDENTITY(1,1) NOT NULL,
	[RUTA] [nvarchar](15) NULL,
	[VENDEDOR] [nvarchar](8) NULL,
	[CLIENTE] [nvarchar](15) NULL,
	[PRODUCTO] [nvarchar](15) NULL,
	[CANTIDAD] [float] NULL,
	[UNIDADMEDIDA] [nvarchar](15) NULL,
	[PESO] [float] NULL,
	[UNIDADMEDIDAPESO] [nvarchar](15) NULL,
	[PRECIO] [float] NULL,
	[TOTAL] [float] NULL,
	[ORDEN] [int] NULL,
	[ACIERTO] [bit] NULL,
	[FECHAGENERACION] [date] NULL CONSTRAINT [DF_P_PEDSUG_FECHAGENERACION]  DEFAULT (getdate()),
	[FECHASISTEMA] [datetime] NULL,
	[USERAGR] [nvarchar](50) NULL,
	[FECHAAGR] [datetime] NULL,
	[USERMOD] [nvarchar](50) NULL,
	[FECHAMOD] [datetime] NULL,
 CONSTRAINT [PK_P_PEDSUG] PRIMARY KEY CLUSTERED 
(
	[IDPEDIDOSUG] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[P_PEDSUG]  WITH CHECK ADD  CONSTRAINT [FK_P_PEDSUG_P_CLIENTE] FOREIGN KEY([CLIENTE])
REFERENCES [dbo].[P_CLIENTE] ([CODIGO])
GO

ALTER TABLE [dbo].[P_PEDSUG] CHECK CONSTRAINT [FK_P_PEDSUG_P_CLIENTE]
GO

ALTER TABLE [dbo].[P_PEDSUG]  WITH CHECK ADD  CONSTRAINT [FK_P_PEDSUG_P_PEDSUG] FOREIGN KEY([IDPEDIDOSUG])
REFERENCES [dbo].[P_PEDSUG] ([IDPEDIDOSUG])
GO

ALTER TABLE [dbo].[P_PEDSUG] CHECK CONSTRAINT [FK_P_PEDSUG_P_PEDSUG]
GO

ALTER TABLE [dbo].[P_PEDSUG]  WITH CHECK ADD  CONSTRAINT [FK_P_PEDSUG_P_PRODUCTO] FOREIGN KEY([PRODUCTO])
REFERENCES [dbo].[P_PRODUCTO] ([CODIGO])
GO

ALTER TABLE [dbo].[P_PEDSUG] CHECK CONSTRAINT [FK_P_PEDSUG_P_PRODUCTO]
GO

/****** Object:  Table [dbo].[P_ULTIMOPRECIO]    Script Date: 18/07/2019 12:46:58 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_ULTIMOPRECIO](
	[IDULTIMOPRECIO] [int] IDENTITY(1,1) NOT NULL,
	[RUTA] [nvarchar](15) NULL,
	[CLIENTE] [nvarchar](15) NULL,
	[PRODUCTO] [nvarchar](15) NULL,
	[PRECIO] [float] NULL,
	[FECHAGENERACION] [date] NULL,
 CONSTRAINT [PK_P_ULTIMOPRECIO] PRIMARY KEY CLUSTERED 
(
	[IDULTIMOPRECIO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Object:  Table [dbo].[P_CATALOGO_PRODUCTO]    Script Date: 18/07/2019 12:46:25 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_CATALOGO_PRODUCTO](
	[CODIGO_PRODUCTO] [nvarchar](15) NOT NULL,
	[ORDEN] [int] NOT NULL,
 CONSTRAINT [PK_P_CATALOGO_PRODUCTO] PRIMARY KEY CLUSTERED 
(
	[CODIGO_PRODUCTO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Object:  Table [dbo].[P_BITACORA_VERSIONPC]    Script Date: 2019/08/19 07:33:55 a.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[P_BITACORA_VERSIONPC](
	[IDBITACORA] [int] IDENTITY(1,1) NOT NULL,
	[USUARIO] [nvarchar](15) NOT NULL,
	[FECHA] [datetime] NULL,
	[NUMVERSION] [nvarchar](50) NULL,
	[COMPUTADORA] [nvarchar](50) NULL,
 CONSTRAINT [PK_P_BITACORA_VERSIONPC] PRIMARY KEY CLUSTERED 
(
	[IDBITACORA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Object:  Index [NCL_IX_P_PORCMERMA]    Script Date: 2019/08/22 08:22:00 a.m. ******/
CREATE NONCLUSTERED INDEX [NCL_IX_P_PORCMERMA] ON [dbo].[P_PORCMERMA]
(
	[PRODUCTO] ASC,
	[RUTA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

/****** Object:  Index [IX_tmp_liquidacion]    Script Date: 2019/08/19 07:54:24 a.m. ******/
CREATE NONCLUSTERED INDEX [IX_tmp_liquidacion] ON [dbo].[tmp_liquidacion]
(
	[RUTA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

/****** Object:  Index [pk_tmp_liquidacion]    Script Date: 2019/08/19 11:40:34 a.m. ******/
ALTER TABLE [dbo].[tmp_liquidacion] ADD  CONSTRAINT [pk_tmp_liquidacion] PRIMARY KEY CLUSTERED 
(
	[RUTA] ASC,
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

/****** Object:  Index [pk_tmp_liquidacion]    Script Date: 2019/08/19 11:40:34 a.m. ******/
ALTER TABLE [dbo].[tmp_liquidacion] ADD  CONSTRAINT [pk_tmp_liquidacion] PRIMARY 
KEY CLUSTERED 
(
	[RUTA] ASC,
	[CODIGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, 
IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 
ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [NCL_IX1_DEL_P_STOCKB]
ON [dbo].[P_STOCKB] ([DOCUMENTO])INCLUDE ([RUTA],[BARRA],[STATUS])
GO

CREATE NONCLUSTERED INDEX [NCL_IX_P_PRECESPEC] ON [dbo].[P_PRECESPEC] 
( [CODIGO] ASC, [VALOR] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF,
SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, 
ALLOW_PAGE_LOCKS = ON)

CREATE NONCLUSTERED INDEX [NCL_IX_TEMP_STOCK_LIQUIDACION_1] ON [dbo].[TEMP_STOCK_LIQUIDACION]
(
	[CODIGOLIQUIDACION] ASC,
	[CODIGOVENDEDOR] ASC,
	[CODIGORUTA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, 

DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [NCL_IX_P_NOTACD]
ON [dbo].[P_NOTACD] ([CODIGOLIQUIDACION])
GO

CREATE NONCLUSTERED INDEX NONCL_SEL_P_LIQUIDACION_20190819_EJC
ON [dbo].[P_LIQUIDACION] ([RUTA],[VENDEDOR],[FECHA],[CORELDMOV],[SUCURSAL],[ESTADO])

CREATE NONCLUSTERED INDEX NONCL_P_LIQUIDACION_SEL_20190819_1455_EJC
ON [dbo].[P_LIQUIDACION] ([FECHA],[USUARIO],[SUCURSAL])
INCLUDE ([CODIGO],[RUTA],[VENDEDOR],[TOTALCONTADO],[TOTALCREDITO],[TOTALCOBROS],[TOTALNCYD],
[TOTALDEVOLNC],[FECHA_SISTEMA],[ESTADO],[REF],[FECHA_ACTULIZACION],[CORELDMOV],[ENVIAR_A_SAP])

CREATE NONCLUSTERED INDEX NONCL_SEL_D_MOV_20190819_1515_EJC
ON [dbo].[D_MOV] ([RUTA],[ANULADO],[TIPO],[CODIGOLIQUIDACION])

CREATE NONCLUSTERED INDEX  NONCL_SEL_MI3_SAP_20190819_1515_EJC
ON [dbo].[MI3_SAP] ([CODIGOLIQUIDACION])INCLUDE ([ESTATUS])

CREATE NONCLUSTERED INDEX NONCL_SEL_D_DEPOSD_20190819_1515_EJC
ON [dbo].[D_DEPOSD] ([DOCCOREL])INCLUDE ([COREL])

CREATE NONCLUSTERED INDEX NONCL_SEL_D_FACTURA_20190819_1515_EJC
ON [dbo].[D_FACTURA] ([ANULADO],[RUTA],[VENDEDOR],[CODIGOLIQUIDACION])
INCLUDE ([COREL],[FECHA])

CREATE NONCLUSTERED INDEX NONCL_SEL_P_NOTACD_20190819_1515_EJC
ON [dbo].[P_NOTACD] ([CORELFACTURA],[RUTA])

/****** Object:  Index [NCL_IX_P_LIQ_ENVIANDO_20190820]    Script Date: 2019/08/20 08:50:06 a.m. ******/
CREATE NONCLUSTERED INDEX [NCL_IX_P_LIQ_ENVIANDO_20190820] ON [dbo].[P_LIQ_ENVIANDO]
(
	[USUARIO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX NONCL_P_DIFLIQ_DET_20190820_0947_EJC 
ON [dbo].[P_DIFLIQ_DET] ([CODIGOLIQUIDACION])
INCLUDE ([CODIGO],[PRODUCTO],[CANTIDAD],[PESO],[UMSTOCK])

CREATE NONCLUSTERED INDEX NONCL_P_STOCKB_20190820_0953_EJC 
ON [dbo].[P_STOCKB] ([RUTA],[ANULADO],[STATUS],[CODIGOLIQUIDACION],[FECHA])
INCLUDE ([DOCUMENTO])

/******* Modificaci√≥n para utilizar el campo VEHICULO 
         para guardar la forma de pago de la factura '1' Cr√©dito, '0' Contado *******/	 
BEGIN TRANSACTION
	update d_Factura set vehiculo = '0'
	update d_factura set vehiculo = isnull( (select 1 from d_facturap where codpago = 4 and corel = d_factura.corel),0)
COMMIT TRANSACTION

/****** Object:  Trigger [dbo].[trgUpdFlagPagoI]    Script Date: 2019/08/20 04:20:10 p.m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TRIGGER [dbo].[trgUpdFlagPagoI]
   ON  [dbo].[D_FACTURAP]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

    -- Insert statements for trigger here
    DECLARE @COREL NVARCHAR(20)
	DECLARE @TIPO NVARCHAR(1)
    
    SELECT @COREL = COREL, @TIPO=TIPO FROM INSERTED
    
    UPDATE D_FACTURA SET VEHICULO =  CASE WHEN @TIPO = 'K' THEN '1' ELSE '0' END  WHERE COREL = @COREL 
END


/****** Object:  Trigger [dbo].[trgUpdateFlagF]    Script Date: 2019/08/20 03:41:46 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TRIGGER [dbo].[trgUpdFlagPagoU]
   ON  [dbo].[D_FACTURAP]
   AFTER UPDATE
AS 
BEGIN
	
	SET NOCOUNT ON;

    -- Insert statements for trigger here
    DECLARE @COREL NVARCHAR(20)
	DECLARE @TIPO NVARCHAR(1)
    
    SELECT @COREL = COREL, @TIPO=TIPO FROM INSERTED
    
    UPDATE D_FACTURA SET VEHICULO =  CASE WHEN @TIPO = 'K' THEN '1' ELSE '0' END  WHERE COREL = @COREL 
END

GO	 


/****** Object:  View [dbo].[vw_factura_impresion3]    Script Date: 2019/08/25 09:03:28 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[vw_factura_impresion3]
AS
SELECT        dbo.P_SUCURSAL.DESCRIPCION, dbo.P_SUCURSAL.DIRECCION, dbo.P_SUCURSAL.TELEFONO, dbo.P_SUCURSAL.NIT, dbo.D_FACTURA.COREL, 
                         dbo.D_FACTURA.CLIENTE AS CODIGOCLIENTE, dbo.P_CLIENTE.NOMBRE AS NOMBRECLIENTE, dbo.D_FACTURA.VENDEDOR AS CODIGOVENDEDOR, 
                         dbo.P_VENDEDOR.NOMBRE AS NOMBREVENDEDOR, dbo.D_FACTURAD.PRODUCTO AS CODIGOPRODUCTO, dbo.P_PRODUCTO.DESCCORTA AS NOMPRODUCTO, 
                         dbo.D_FACTURAD.CANT AS CANTIDAD, dbo.D_FACTURAD.PESO, dbo.D_FACTURAD.PRECIO, dbo.D_FACTURAD.TOTAL, 
                         CASE WHEN P_CLIENTE.MEDIAPAGO > '3' THEN 'CREDITO' ELSE 'CONTADO' END AS TIPO, 
                         CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 0 THEN CASE WHEN P_PRODUCTO.ES_PROD_BARRA = 0 THEN D_FACTURAD.UMVenta ELSE D_FACTURAD.UMstock
                          END ELSE D_FACTURAD.UMstock END AS UM, dbo.D_FACTURA.FECHA, dbo.D_FACTURA.SERIE + RIGHT('000000' + CONVERT(NVARCHAR(6), 
                         dbo.D_FACTURA.CORELATIVO), 6) AS NOFACTURA, dbo.D_FACTURA.REFERENCIA, dbo.D_FACTURAD.UMVENTA, dbo.D_FACTURA.RUTA, dbo.D_FACTURA.ANULADO, 
                         dbo.D_FACTURA.ASIGNACION, dbo.D_FACTURA.FACTLINK, dbo.D_FACTURA.CODIGOLIQUIDACION, dbo.D_FACTURA.SERIE
FROM            dbo.P_SUCURSAL INNER JOIN
                         dbo.P_VENDEDOR INNER JOIN
                         dbo.D_FACTURA INNER JOIN
                         dbo.D_FACTURAD ON dbo.D_FACTURA.COREL = dbo.D_FACTURAD.COREL ON dbo.P_VENDEDOR.CODIGO = dbo.D_FACTURA.VENDEDOR INNER JOIN
                         dbo.P_CLIENTE ON dbo.D_FACTURA.CLIENTE = dbo.P_CLIENTE.CODIGO ON dbo.P_SUCURSAL.EMPRESA = dbo.D_FACTURA.EMPRESA AND 
                         dbo.P_SUCURSAL.CODIGO = dbo.P_CLIENTE.SUCURSAL INNER JOIN
                         dbo.P_PRODUCTO ON dbo.D_FACTURAD.PRODUCTO = dbo.P_PRODUCTO.CODIGO



GO

/****** Object:  View [dbo].[vw_factbon_impresion1]    Script Date: 2019/08/25 09:24:44 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vw_factbon_impresion1]
AS
 SELECT D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA, COUNT(D_BONIF_BARRA.BARRA) AS CANT,  
CASE WHEN P_PRODUCTO.VENTA_POR_PESO =0 THEN  CASE WHEN P_PRODUCTO.ES_PROD_BARRA = 0 THEN   D_BONIF.UMVenta  ELSE   D_BONIF.UMstock  END  
ELSE  D_BONIF.UMstock END AS UMVENTA, D_BONIF.UMPESO, SUM(D_BONIF_BARRA.PESO) AS PESO  
FROM D_BONIF INNER JOIN D_BONIF_BARRA ON D_BONIF.COREL = D_BONIF_BARRA.COREL  AND D_BONIF.PRODUCTO = D_BONIF_BARRA.PRODUCTO 
 INNER JOIN P_PRODUCTO ON D_BONIF.PRODUCTO = P_PRODUCTO.CODIGO  
GROUP BY D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA,  P_PRODUCTO.VENTA_POR_PESO, P_PRODUCTO.ES_PROD_BARRA, 
D_BONIF.UMVenta, D_BONIF.UMstock, D_BONIF.UMPESO  
UNION  
SELECT D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA, SUM(D_BONIF.CANT) AS CANT,  
CASE WHEN P_PRODUCTO.VENTA_POR_PESO =0 THEN  CASE WHEN P_PRODUCTO.ES_PROD_BARRA = 0 THEN   D_BONIF.UMVenta  ELSE   D_BONIF.UMstock  END  
ELSE  D_BONIF.UMstock END AS UMVENTA, D_BONIF.UMPESO, SUM(D_BONIF_LOTES.PESO) AS PESO  
FROM D_BONIF INNER JOIN D_BONIF_LOTES ON D_BONIF.COREL = D_BONIF_LOTES.COREL  AND D_BONIF.PRODUCTO = D_BONIF_LOTES.PRODUCTO  
INNER JOIN P_PRODUCTO ON D_BONIF.PRODUCTO = P_PRODUCTO.CODIGO  
GROUP BY D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA,  P_PRODUCTO.VENTA_POR_PESO, P_PRODUCTO.ES_PROD_BARRA, D_BONIF.UMVenta,
 D_BONIF.UMstock, D_BONIF.UMPESO 

GO

/****** Object:  View [dbo].[vw_factbon_impresion3]    Script Date: 2019/08/25 09:25:29 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[vw_factbon_impresion3]
AS
 SELECT D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA, COUNT(D_BONIF_BARRA.BARRA) AS CANT,  CASE WHEN P_PRODUCTO.VENTA_POR_PESO =0 THEN  CASE WHEN P_PRODUCTO.ES_PROD_BARRA = 0 THEN   D_BONIF.UMVenta  ELSE   D_BONIF.UMstock  END  ELSE  D_BONIF.UMstock END AS UMVENTA, D_BONIF.UMPESO, SUM(D_BONIF_BARRA.PESO) AS PESO  FROM D_BONIF INNER JOIN D_BONIF_BARRA ON D_BONIF.COREL = D_BONIF_BARRA.COREL  AND D_BONIF.PRODUCTO = D_BONIF_BARRA.PRODUCTO  INNER JOIN P_PRODUCTO ON D_BONIF.PRODUCTO = P_PRODUCTO.CODIGO  GROUP BY D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA,  P_PRODUCTO.VENTA_POR_PESO, P_PRODUCTO.ES_PROD_BARRA, D_BONIF.UMVenta, D_BONIF.UMstock, D_BONIF.UMPESO  UNION  SELECT D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA, SUM(D_BONIF_LOTES.CANT) AS CANT,  CASE WHEN P_PRODUCTO.VENTA_POR_PESO =0 THEN  CASE WHEN P_PRODUCTO.ES_PROD_BARRA = 0 THEN   D_BONIF.UMVenta  ELSE   D_BONIF.UMstock  END  ELSE  D_BONIF.UMstock END AS UMVENTA, D_BONIF.UMPESO, SUM(D_BONIF_LOTES.PESO) AS PESO  FROM D_BONIF INNER JOIN D_BONIF_LOTES ON D_BONIF.COREL = D_BONIF_LOTES.COREL  AND D_BONIF.PRODUCTO = D_BONIF_LOTES.PRODUCTO  INNER JOIN P_PRODUCTO ON D_BONIF.PRODUCTO = P_PRODUCTO.CODIGO  GROUP BY D_BONIF.COREL, D_BONIF.PRODUCTO, P_PRODUCTO.DESCLARGA,  P_PRODUCTO.VENTA_POR_PESO, P_PRODUCTO.ES_PROD_BARRA, D_BONIF.UMVenta, D_BONIF.UMstock,D_BONIF.UMPESO 

GO

/****** Object:  View [dbo].[vw_facturas_impresion]    Script Date: 2019/08/25 09:25:52 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [dbo].[vw_facturas_impresion]
AS
SELECT        dbo.D_FACTURA.SERIE + RIGHT('000000' + CONVERT(NVARCHAR(6), dbo.D_FACTURA.CORELATIVO), 6) AS FACTURA, dbo.D_FACTURA.FECHA, 
                         dbo.D_FACTURA.CLIENTE + ' ' + ISNULL(dbo.P_CLIENTE.NOMBRE, N'CN') AS CLIENTE, 
                         CASE WHEN D_FACTURA.VEHICULO = '0' THEN 'CONTADO' ELSE 'CREDITO' END AS TIPO, CASE WHEN D_FACTURA.ANULADO = 'S' THEN ROUND(0, 2) 
                         ELSE SUM(ROUND(D_FACTURA.TOTAL, 2)) END AS TOTAL, dbo.D_FACTURA.RUTA + ' ' + dbo.P_RUTA.NOMBRE AS RUTA, dbo.P_VENDEDOR.CODIGO, 
                         dbo.P_VENDEDOR.NOMBRE, CASE WHEN D_FACTURA.ANULADO = 'S' THEN ROUND(0, 2) ELSE ISNULL(D_NOTACRED.TOTAL, 0) END AS TOTAL_NC, 
                         CASE WHEN D_FACTURA.ANULADO = 'S' THEN 0 ELSE ISNULL(D_NOTACRED.TOTAL, 0) END AS NOTA_CREDITO, 
                         CASE WHEN D_FACTURA.ANULADO = 'S' THEN 0 ELSE ROUND(SUM(D_FACTURA.TOTAL) - ISNULL(D_NOTACRED.TOTAL, 0), 2) END AS TOTAL_SIN_NC, 
                         dbo.D_FACTURA.ANULADO, D_FACTURA.CODIGOLIQUIDACION, D_FACTURA.VENDEDOR, DBO.P_RUTA.CODIGO AS CODIGORUTA
FROM            dbo.D_FACTURA INNER JOIN
                         dbo.P_RUTA ON dbo.D_FACTURA.RUTA = dbo.P_RUTA.CODIGO INNER JOIN
                         dbo.P_VENDEDOR ON dbo.D_FACTURA.VENDEDOR = dbo.P_VENDEDOR.CODIGO LEFT OUTER JOIN
                         dbo.P_CLIENTE ON dbo.D_FACTURA.CLIENTE = dbo.P_CLIENTE.CODIGO LEFT OUTER JOIN
                         dbo.D_NOTACRED ON dbo.D_FACTURA.COREL = dbo.D_NOTACRED.FACTURA
WHERE        (dbo.D_FACTURA.SERIE <> 'DL')
GROUP BY dbo.D_FACTURA.RUTA, dbo.P_RUTA.NOMBRE, dbo.P_VENDEDOR.CODIGO, dbo.P_VENDEDOR.NOMBRE, dbo.D_FACTURA.COREL, dbo.D_FACTURA.FECHA, 
                         dbo.D_FACTURA.CLIENTE, dbo.P_CLIENTE.NOMBRE, dbo.D_FACTURA.SERIE, dbo.D_FACTURA.CORELATIVO, dbo.D_NOTACRED.TOTAL, dbo.D_FACTURA.ANULADO, 
                         dbo.D_FACTURA.VEHICULO, D_FACTURA.CODIGOLIQUIDACION, D_FACTURA.VENDEDOR, DBO.P_RUTA.CODIGO 

GO

/****** Object:  View [dbo].[vw_facturas_impresion2]    Script Date: 2019/08/25 09:26:39 p.m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vw_facturas_impresion2]
AS
SELECT        ISNULL(dbo.P_SUCURSAL.DESCRIPCION, N'SD') AS DESCRIPCION, ISNULL(dbo.P_SUCURSAL.DIRECCION, N'SD') AS DIRECCION, 
                         ISNULL(dbo.P_SUCURSAL.TELEFONO, N'SD') AS TELEFONO, ISNULL(dbo.P_SUCURSAL.NIT, N'CF') AS NIT, dbo.D_FACTURA.COREL, 
                         dbo.D_FACTURA.CLIENTE AS CODIGOCLIENTE, dbo.P_CLIENTE.NOMBRE AS NOMBRECLIENTE, dbo.D_FACTURA.VENDEDOR AS CODIGOVENDEDOR, 
                         dbo.P_VENDEDOR.NOMBRE AS NOMBREVENDEDOR, dbo.D_FACTURAD.PRODUCTO AS CODIGOPRODUCTO, dbo.P_PRODUCTO.DESCCORTA AS NOMPRODUCTO, 
                         dbo.D_FACTURAD.CANT AS CANTIDAD, dbo.D_FACTURAD.PESO, dbo.D_FACTURAD.PRECIO, dbo.D_FACTURAD.TOTAL, 
                         CASE WHEN P_CLIENTE.MEDIAPAGO > '3' THEN 'CREDITO' ELSE 'CONTADO' END AS TIPO, dbo.D_FACTURA.FECHA, 
                         dbo.D_FACTURA.SERIE + RIGHT('000000' + CONVERT(NVARCHAR(6), dbo.D_FACTURA.CORELATIVO), 6) AS NOFACTURA, dbo.D_FACTURA.REFERENCIA, 
                         CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 0 THEN CASE WHEN P_PRODUCTO.ES_PROD_BARRA = 0 THEN D_FACTURAD.UMVenta ELSE D_FACTURAD.UMstock
                          END ELSE D_FACTURAD.UMstock END AS UM, dbo.D_FACTURA.ASIGNACION, dbo.D_FACTURA.FACTLINK, dbo.D_FACTURA.ANULADO, dbo.D_FACTURA.RUTA, 
                         dbo.D_FACTURAD.COREL AS Expr1
FROM            dbo.D_FACTURA INNER JOIN
                         dbo.D_FACTURAD ON dbo.D_FACTURA.COREL = dbo.D_FACTURAD.COREL INNER JOIN
                         dbo.P_VENDEDOR ON dbo.P_VENDEDOR.CODIGO = dbo.D_FACTURA.VENDEDOR LEFT OUTER JOIN
                         dbo.P_CLIENTE ON dbo.D_FACTURA.CLIENTE = dbo.P_CLIENTE.CODIGO LEFT OUTER JOIN
                         dbo.P_SUCURSAL ON dbo.P_SUCURSAL.EMPRESA = dbo.D_FACTURA.EMPRESA AND dbo.P_SUCURSAL.CODIGO = dbo.P_CLIENTE.SUCURSAL INNER JOIN
                         dbo.P_PRODUCTO ON dbo.D_FACTURAD.PRODUCTO = dbo.P_PRODUCTO.CODIGO

GO

CREATE NONCLUSTERED INDEX NCL_20190827_D_FACTURA_VW_EJC
ON [dbo].[D_FACTURA] ([ANULADO])
INCLUDE ([COREL],[FECHA],[RUTA],[VENDEDOR],[CLIENTE],[TOTAL],[STATCOM],[SERIE],[CORELATIVO],[REFERENCIA],[SUPERVISOR],[AYUDANTE])

 
CREATE NONCLUSTERED INDEX NONCL_20190827A_D_FACTURA_VW_EJC
ON [dbo].[D_FACTURA] ([ANULADO])
INCLUDE ([COREL],[FECHA],[RUTA],[VENDEDOR],[CLIENTE],[TOTAL],[STATCOM],[SERIE],[CORELATIVO],[REFERENCIA],[SUPERVISOR],[AYUDANTE],[VEHICULO])

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Carolina Fuentes
-- Create date: 27-08-2019
-- Description:	Procedimiento para generar reporte de Ventas
-- =============================================
CREATE PROCEDURE SP_REPORTE_VENTAS
	@FechaIni AS DATETIME,
	@FechaFin AS DATETIME,
	@Sucursal AS NVARCHAR(15)
AS
BEGIN
		-- SET NOCOUNT ON added to prevent extra result sets from
		-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT TOP(1) D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_FACTURAD.PRODUCTO, 
	CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN ISNULL(D_FACTURAD_LOTES.PESO, D_FACTURAD.PESO)
	ELSE ISNULL(D_FACTURAD_LOTES.CANTIDAD, D_FACTURAD.CANT) END AS CANT, CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN ISNULL(D_FACTURAD_LOTES.PESO, D_FACTURAD.PESO)
	ELSE ISNULL(D_FACTURAD_LOTES.CANTIDAD, D_FACTURAD.CANT) END AS CANT2, 
	ISNULL(D_FACTURAD_LOTES.LOTE, N'') AS LOTE, D_FACTURAD.PRECIODOC, D_FACTURAD.PRODUCTO AS PRODUCTO2, '' AS BARRA2, 
	D_FACTURAD.PESO, D_FACTURA.RUTA, ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, '' AS MOTIVO, 0 AS BONIFICADO, 
	D_FACTURAD.VAL2 AS POSICION, 0 AS PADRE, CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, 
	D_DEPOS.BANCO AS CUENTA, ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	INTO DOC_VENTAS
	FROM      D_FACTURA INNER JOIN
	D_FACTURAD ON D_FACTURA.COREL = D_FACTURAD.COREL INNER JOIN
	P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO  RIGHT OUTER JOIN
	D_FACTURAD_LOTES ON D_FACTURAD.COREL = D_FACTURAD_LOTES.COREL AND 
	D_FACTURAD.PRODUCTO = D_FACTURAD_LOTES.PRODUCTO INNER JOIN
	D_DEPOSD ON D_DEPOSD.DOCCOREL = D_FACTURA.COREL INNER JOIN
	D_DEPOS ON D_DEPOSD.COREL = D_DEPOS.COREL INNER JOIN P_PRODUCTO ON 
	P_PRODUCTO.CODIGO = D_FACTURAD.PRODUCTO
	WHERE     (D_FACTURA.ANULADO = N'N') AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 
	UNION
	SELECT      D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_FACTURAD.PRODUCTO, 
	CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN ISNULL(D_FACTURAD_LOTES.PESO, D_FACTURAD.PESO)
	ELSE ISNULL(D_FACTURAD_LOTES.CANTIDAD, D_FACTURAD.CANT) END AS CANT, CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN ISNULL(D_FACTURAD_LOTES.PESO, D_FACTURAD.PESO)
		ELSE ISNULL(D_FACTURAD_LOTES.CANTIDAD, D_FACTURAD.CANT) END AS CANT2, 
	ISNULL(D_FACTURAD_LOTES.LOTE, N'') AS LOTE, D_FACTURAD.PRECIODOC, D_FACTURAD.PRODUCTO AS PRODUCTO2, '' AS BARRA2, 
	D_FACTURAD.PESO, D_FACTURA.RUTA, ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, '' AS MOTIVO, 0 AS BONIFICADO, 
	D_FACTURAD.VAL2 AS POSICION, 0 AS PADRE, CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, '' AS CUENTA, 
	ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	FROM         D_FACTURA INNER JOIN
	D_FACTURAD ON D_FACTURA.COREL = D_FACTURAD.COREL INNER JOIN
		P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO RIGHT OUTER JOIN
	D_FACTURAD_LOTES ON D_FACTURAD.COREL = D_FACTURAD_LOTES.COREL AND 
	D_FACTURAD.PRODUCTO = D_FACTURAD_LOTES.PRODUCTO INNER JOIN P_PRODUCTO ON 
	P_PRODUCTO.CODIGO = D_FACTURAD.PRODUCTO
	WHERE     (D_FACTURA.ANULADO = N'N')  AND CONVERT(INT, D_FACTURA.VEHICULO) = 1 AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 
	UNION
	SELECT      D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_FACTURAD_1.PRODUCTO, 
	D_STOCKB_DEV.PESO AS CANT, 1 AS CANT2, '' AS LOTE, D_FACTURAD_1.PRECIODOC, D_FACTURAD_1.PRODUCTO AS PRODUCTO2, 
	D_STOCKB_DEV.BARRA AS BARRA2, D_STOCKB_DEV.PESO, D_FACTURA.RUTA, ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, 
	ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, '' AS MOTIVO, 0 AS BONIFICADO, D_FACTURAD_1.VAL2 AS POSICION, 0 AS PADRE, 
	CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, 
	D_DEPOS.BANCO AS CUENTA, ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	FROM         D_FACTURA AS D_FACTURA INNER JOIN
	D_FACTURAD AS D_FACTURAD_1 ON D_FACTURA.COREL = D_FACTURAD_1.COREL INNER JOIN
		P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO RIGHT OUTER JOIN
	D_STOCKB_DEV ON D_FACTURAD_1.PRODUCTO = D_STOCKB_DEV.CODIGO AND D_FACTURAD_1.COREL = D_STOCKB_DEV.COREL INNER JOIN
	D_DEPOSD ON D_DEPOSD.DOCCOREL = D_FACTURA.COREL INNER JOIN
	D_DEPOS ON D_DEPOSD.COREL = D_DEPOS.COREL
	WHERE     (D_FACTURA.ANULADO = N'N')  AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 
	UNION
	SELECT      D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_FACTURAD_1.PRODUCTO, 
	D_STOCKB_DEV.PESO AS CANT, 1 AS CANT2, '' AS LOTE, D_FACTURAD_1.PRECIODOC, D_FACTURAD_1.PRODUCTO AS PRODUCTO2, 
	D_STOCKB_DEV.BARRA AS BARRA2, D_STOCKB_DEV.PESO, D_FACTURA.RUTA, ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, 
	ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, '' AS MOTIVO, 0 AS BONIFICADO, D_FACTURAD_1.VAL2 AS POSICION, 0 AS PADRE, 
	CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, 
	'' AS CUENTA, ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	FROM         D_FACTURA AS D_FACTURA INNER JOIN
	D_FACTURAD AS D_FACTURAD_1 ON D_FACTURA.COREL = D_FACTURAD_1.COREL INNER JOIN
		P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO RIGHT OUTER JOIN
	D_STOCKB_DEV ON D_FACTURAD_1.PRODUCTO = D_STOCKB_DEV.CODIGO AND D_FACTURAD_1.COREL = D_STOCKB_DEV.COREL 
	WHERE     (D_FACTURA.ANULADO = N'N')  AND CONVERT(INT, D_FACTURA.VEHICULO) = 1
	AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 
	UNION
	SELECT      D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_BONIF_LOTES.PRODUCTO, 
	CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN D_BONIF_LOTES.PESO
	ELSE D_BONIF_LOTES.CANT END AS CANT, 
	CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN D_BONIF_LOTES.PESO
	ELSE D_BONIF_LOTES.CANT END AS CANT2, D_BONIF_LOTES.LOTE, 0 AS BONIFICADO, 
	D_BONIF_LOTES.PRODUCTO AS PRODUCTO2, '' AS BARRA2, D_BONIF_LOTES.PESO, D_FACTURA.RUTA, 
	ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, '' AS MOTIVO, 1 AS Expr1, 
	D_REL_PROD_BON.CONSECUTIVO AS POSICION, 
	D_REL_PROD_BON.CONSECUTIVO AS PADRE,CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, 
	D_DEPOS.BANCO AS CUENTA, ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	FROM         D_FACTURA AS D_FACTURA INNER JOIN
		P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO INNER JOIN
	D_REL_PROD_BON ON D_FACTURA.COREL = D_REL_PROD_BON.COREL INNER JOIN
	D_BONIF_LOTES ON D_REL_PROD_BON.COREL = D_BONIF_LOTES.COREL AND 
	D_REL_PROD_BON.BONIFICADO = D_BONIF_LOTES.PRODUCTO  INNER JOIN P_PRODUCTO ON 
	P_PRODUCTO.CODIGO = D_BONIF_LOTES.PRODUCTO INNER JOIN
	D_DEPOSD ON D_DEPOSD.DOCCOREL = D_FACTURA.COREL INNER JOIN
	D_DEPOS ON D_DEPOSD.COREL = D_DEPOS.COREL
	WHERE     (D_FACTURA.ANULADO = N'N') AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 
	UNION
	SELECT      D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_BONIF_LOTES.PRODUCTO, 
	CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN D_BONIF_LOTES.PESO
	ELSE D_BONIF_LOTES.CANT END AS CANT, 
	CASE WHEN P_PRODUCTO.VENTA_POR_PESO = 1 AND P_PRODUCTO.ES_PROD_BARRA = 0 THEN D_BONIF_LOTES.PESO
	ELSE D_BONIF_LOTES.CANT END AS CANT2, D_BONIF_LOTES.LOTE, 0 AS BONIFICADO, 
	D_BONIF_LOTES.PRODUCTO AS PRODUCTO2, '' AS BARRA2, D_BONIF_LOTES.PESO, D_FACTURA.RUTA, 
	ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, '' AS MOTIVO, 
	1 AS Expr1, D_REL_PROD_BON.CONSECUTIVO AS POSICION, 
	D_REL_PROD_BON.CONSECUTIVO AS PADRE, CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, 
	'' AS CUENTA, ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	FROM         D_FACTURA AS D_FACTURA INNER JOIN
		P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO INNER JOIN
	D_REL_PROD_BON ON D_FACTURA.COREL = D_REL_PROD_BON.COREL INNER JOIN
	D_BONIF_LOTES ON D_REL_PROD_BON.COREL = D_BONIF_LOTES.COREL AND 
	D_REL_PROD_BON.BONIFICADO = D_BONIF_LOTES.PRODUCTO INNER JOIN P_PRODUCTO ON 
	P_PRODUCTO.CODIGO = D_BONIF_LOTES.PRODUCTO  
	WHERE     (D_FACTURA.ANULADO = N'N') AND CONVERT(INT, D_FACTURA.VEHICULO) = 1
	AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 
	UNION
	SELECT      D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_BONIF_BARRA.PRODUCTO, 
	D_BONIF_BARRA.PESO AS CANT, 1 AS CANT2, '' AS BARRA2, 1 AS BONIFICADO, D_BONIF_BARRA.PRODUCTO AS PRODUCTO2, D_BONIF_BARRA.BARRA, 
	D_BONIF_BARRA.PESO, D_FACTURA.RUTA, ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, 
	'' AS MOTIVO, 1 AS Expr1, D_REL_PROD_BON.CONSECUTIVO AS POSICION, D_REL_PROD_BON.CONSECUTIVO AS PADRE,
	CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, 
	D_DEPOS.BANCO AS CUENTA, ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	FROM         D_FACTURA AS D_FACTURA INNER JOIN
		P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO INNER JOIN
	D_REL_PROD_BON ON D_FACTURA.COREL = D_REL_PROD_BON.COREL INNER JOIN
	D_BONIF_BARRA ON D_REL_PROD_BON.COREL = D_BONIF_BARRA.COREL AND 
	D_REL_PROD_BON.BONIFICADO = D_BONIF_BARRA.PRODUCTO INNER JOIN
	D_DEPOSD ON D_DEPOSD.DOCCOREL = D_FACTURA.COREL INNER JOIN
	D_DEPOS ON D_DEPOSD.COREL = D_DEPOS.COREL
	WHERE     (D_FACTURA.ANULADO = N'N') AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 
	UNION
	SELECT      D_FACTURA.STATCOM, ISNULL(VENDEDORES.BODEGA,'') AS OFI_VENTAS, D_FACTURA.FECHA, 
	D_FACTURA.SERIE + RIGHT('000000' + CONVERT(nvarchar(6), D_FACTURA.CORELATIVO), 6) AS COREL, D_FACTURA.COREL AS COREL1, RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE, 
	RIGHT ('0000000000' + D_FACTURA.CLIENTE,10) AS CLIENTE2, D_FACTURA.VENDEDOR, D_FACTURA.SUPERVISOR, D_FACTURA.AYUDANTE, D_BONIF_BARRA.PRODUCTO, 
	D_BONIF_BARRA.PESO AS CANT, 1 AS CANT2, '' AS BARRA2, 1 AS BONIFICADO, D_BONIF_BARRA.PRODUCTO AS PRODUCTO2, D_BONIF_BARRA.BARRA, 
	D_BONIF_BARRA.PESO, D_FACTURA.RUTA, ISNULL(VENDEDORES.SUBBODEGA,'') AS GRUPO_VEND, ISNULL(VENDEDORES.NIVEL,0) AS NIVEL, 
	'' AS MOTIVO, 1 AS Expr1, D_REL_PROD_BON.CONSECUTIVO AS POSICION, D_REL_PROD_BON.CONSECUTIVO AS PADRE, 
	CONVERT(INT, D_FACTURA.VEHICULO) AS CREDITO, '3000' AS SOCIEDAD, 
	'' AS CUENTA, ROUND(D_FACTURA.TOTAL, 2) AS TOTAL, D_FACTURA.REFERENCIA, D_FACTURA.SERIE, VENDEDORES.NOMBRE
	FROM         D_FACTURA AS D_FACTURA INNER JOIN
		P_VENDEDOR AS VENDEDORES ON D_FACTURA.VENDEDOR = VENDEDORES.CODIGO INNER JOIN
	D_REL_PROD_BON ON D_FACTURA.COREL = D_REL_PROD_BON.COREL INNER JOIN
	D_BONIF_BARRA ON D_REL_PROD_BON.COREL = D_BONIF_BARRA.COREL AND 
	D_REL_PROD_BON.BONIFICADO = D_BONIF_BARRA.PRODUCTO 
	WHERE     (D_FACTURA.ANULADO = N'N') AND CONVERT(INT, D_FACTURA.VEHICULO) = 1
	AND D_FACTURA.FECHA BETWEEN @FechaIni and @FechaFin AND  VENDEDORES.BODEGA = @Sucursal 

END
GO
